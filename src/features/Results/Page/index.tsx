import {
  IonButton,
  IonButtons,
  IonCard,
  IonCardContent,
  IonCardHeader,
  IonCardSubtitle,
  IonCardTitle,
  IonContent,
  IonLoading,
  IonPage,
  IonToolbar
} from "@ionic/react";
import React, { useState } from "react";
import Loadable from "react-loadable";
import Layout from "../../../components/Layout";
import PageHeader from "../../../components/PageHeader";
import Store from "../../../store";
import ResultsList from "../ResultsList";

// Generated by https://quicktype.io

export interface IAnalyte {
  order_lab_code: string;
  order_lab_name: string;
  result_lab_code: string;
  result_lab_name: string;
  test_group_id: number;
  test_group_name: string;
  lab_abnormal_flag: string;
  client_abnormal_flag: null;
  abnormal_flag: string;
  released: boolean;
  range_type: string;
  reference_ranges: any[];
  released_at: string;
  result_status: string;
  value: string;
  value_unit: string;
  observed_at: string;
  notes: null;
  lab_reference_range: string;
  value_type: string;
}

const UnviewedCard = Loadable({
  loader: () => import("../UnviewedCard"),
  loading: () => <IonLoading isOpen />
});

export function ResultsPage() {
  const { setResults, results, update, attributes } = Store.useContainer();
  const [viewed, setViewed] = useState(false);
  const [loading, setLoading] = useState(false);
  return (
    <IonPage>
      <IonLoading isOpen={loading} />
      <PageHeader.WithMenu pageTitle="Results" />
      <IonContent>
        <Layout.Grid>
          <Layout.Block>
            <IonCard color="secondary">
              <IonCardHeader>
                <IonCardTitle>Your results are in</IonCardTitle>
              </IonCardHeader>
              <IonCardContent>
                <p>We've reviewed your results and written up your report</p>
              </IonCardContent>
            </IonCard>
          </Layout.Block>
          {!results.formattedResultsDocument && (
            <Layout.Block>
              <UnviewedCard />
            </Layout.Block>
          )}
          {results.formattedResultsDocument && <ResultsList />}
          {results.formattedResultsDocument && (
            <Layout.Block>
              <IonCard color="tertiary">
                <IonCardHeader>
                  <IonCardSubtitle>One-on-One call</IonCardSubtitle>
                  <IonCardTitle>Need to discuss some results?</IonCardTitle>
                </IonCardHeader>
                <IonCardContent>
                  We're hear to talk preconception with you.
                </IonCardContent>
                <IonToolbar color="tertiary">
                  <IonButtons slot="end">
                    <IonButton
                      target="blank"
                      href="https://calendly.com/preconception/educational-call"
                      className="ion-padding-end"
                    >
                      Schedule
                    </IonButton>
                  </IonButtons>
                </IonToolbar>
              </IonCard>
            </Layout.Block>
          )}
        </Layout.Grid>
      </IonContent>
    </IonPage>
  );
}
